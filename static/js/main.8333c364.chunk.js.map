{"version":3,"sources":["components/shards/Error/styles.module.scss","components/shards/Loading/styles.module.scss","components/shards/Menu/styles.module.scss","components/shards/AlgButton/styles.module.scss","components/shards/ModeButton/styles.module.scss","components/shards/CustomInput/styles.module.scss","components/shards/Cell/styles.module.scss","components/shards/Board/styles.module.scss","components/shards/PlayButton/styles.module.scss","components/HomePage/styles.module.scss","redux/ResetPrevNum/action.ts","components/shards/Cell/index.tsx","redux/Board/action.ts","components/shards/Board/index.tsx","components/shards/PlayButton/index.tsx","redux/Loading/action.ts","redux/Error/action.ts","api/getResult.ts","components/shards/AlgButton/index.tsx","redux/CustomBoard/action.ts","components/shards/ModeButton/index.tsx","components/shards/CustomInput/index.tsx","components/shards/Menu/index.tsx","components/shards/Loading/index.tsx","components/shards/Error/index.tsx","components/HomePage/index.tsx","App.tsx","redux/Board/reducer.ts","redux/store.ts","redux/Loading/reducer.ts","redux/Error/reducer.ts","redux/CustomBoard/reducer.ts","redux/ResetPrevNum/reducer.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","SET_RESET_PREV_NUM","setResetPrevNum","reset","type","payload","selectResetPrevNum","state","resetPrevNumReducer","isNumeric","number","test","areEqual","prev","next","style","color","Cell","prevNum","value","ref","useRef","useEffect","current","undefined","usePrevious","useSelector","newStyle","className","styles","cell","memo","SET_BOARD","setBoard","board","selectBoard","boardReducer","Board","Array","from","map","el","i","gridStyle","PlayButton","handleClick","name","button","onClick","SET_LOADING","setLoading","loading","selectLoading","loadingReducer","SET_ERROR","setError","error","selectError","errorReducer","API","getResult","a","fetch","response","text","data","getAC3","getBackTrack","AlgButton","dispatch","useDispatch","handleAlgClick","func","then","includes","algBtn","SET_CUSTOM_BOARD","setCustomBoard","selectCustomBoard","customBoardReducer","ModeButton","handleModeClick","mode","modeBtn","CustomBoard","useState","length","join","initBoard","setInitBoard","customBoard","onChange","e","target","console","log","valueInput","pattern","title","okButton","some","Menu","container","menuTitle","btnContainer","LoadingScreen","overlay","notiContainer","loadingDescript","img","src","alt","ErrorNoti","handleExit","useCallback","errorDescript","exitButton","HomePage","main","App","initial","rootReducer","combineReducers","action","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,cAAgB,8BAA8B,IAAM,oBAAoB,WAAa,6B,gBCAvLD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,gBAAkB,gCAAgC,IAAM,sB,iBCA1JD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,0BAA0B,aAAe,+B,kBCA7GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,gBCAzDD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,uB,gBCA3DD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,SAAW,2B,kBCArED,EAAOC,QAAU,CAAC,KAAO,uB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,wB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,uB,+KCDZC,EAAqB,qBAErBC,EAAkB,SAACC,GAAD,MAAqB,CAClDC,KAAMH,EACNI,QAASF,IAGEG,EAAqB,SAACC,GAAD,OAChCA,EAAMC,qB,wBCHR,SAASC,EAAUC,GACjB,MAAO,KAAKC,KAAKD,GAcnB,SAASE,EAASC,EAAWC,GAC3B,OAAOD,EAAKH,SAAWI,EAAKJ,QAAUG,EAAKE,MAAMC,QAAUF,EAAKC,MAAMC,MAYxE,SAASC,EAAT,GAA6C,IAA7BP,EAA4B,EAA5BA,OAAQK,EAAoB,EAApBA,MAEhBG,EAzBR,SAAqBC,EAAYhB,GAC/B,IAAMiB,EAAMC,mBAMZ,OAJAC,qBAAU,WACRF,EAAIG,QAAUJ,IACb,CAACA,IAEGhB,OAAQqB,EAAYJ,EAAIG,QAkBfE,CAAYf,EADdgB,YAAYpB,IAIpBqB,EAAQ,eAAQZ,GAOtB,YAJgBS,IAAZN,GAAyBA,IAAYR,IACvCiB,EAASX,MAAQ,QAIjB,qBAAKY,UAAWC,IAAOC,KAAMf,MAAOY,EAApC,SACGlB,EAAUC,GAAUA,EAAS,KAKrBqB,qBAAKd,EAAML,GCpDboB,EAAY,YAEZC,EAAW,SAACC,GAAD,MAAoB,CAC1C9B,KAAM4B,EACN3B,QAAS6B,IAGEC,EAAc,SAAC5B,GAAD,OAAwBA,EAAM6B,c,iBCF1C,SAASC,IACtB,IAAMH,EAAQR,YAAYS,GAE1B,OACE,yBAASP,UAAWC,IAAOK,MAA3B,SACGI,MAAMC,KAAKL,GAAOM,KAAI,SAACC,EAAIC,GAC1B,IAAMC,EAAiB,CACrB3B,MAAO,QAeT,OAZI0B,EAAI,IAAM,GAAKA,EAAI,IAAM,IAC3BC,EAAS,WAAiB,kBAGxBD,EAAI,IAAM,GAAKA,EAAI,GAAK,GAAKA,EAAI,IACnCC,EAAS,UAAgB,kBAGhB,MAAPF,IACFE,EAAU3B,MAAQ,QAGb,cAAC,EAAD,CAAcN,OAAQ+B,EAAI1B,MAAO4B,GAAtBD,Q,6DCnBX,SAASE,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,KAChD,OACE,qBAAKlB,UAAWC,IAAOkB,OAAQC,QAASH,EAAxC,SACGC,ICXA,IAAMG,EAAc,cAEdC,EAAa,SAACC,GAAD,MAAuB,CAC/C/C,KAAM6C,EACN5C,QAAS8C,IAGEC,EAAgB,SAAC7C,GAAD,OAAyBA,EAAM8C,gBCP/CC,EAAY,YAEZC,EAAW,SAACC,GAAD,MAAqB,CAC3CpD,KAAMkD,EACNjD,QAASmD,IAGEC,EAAc,SAAClD,GAAD,OAAyBA,EAAMmD,cCPpDC,EAAM,kC,SAEGC,E,8EAAf,WAAyBD,GAAzB,iBAAAE,EAAA,sEACuBC,MAAMH,GAD7B,cACMI,EADN,gBAEmBA,EAASC,OAF5B,cAEMC,EAFN,yBAISA,GAJT,4C,sBAOO,SAASC,EAAOhC,GACrB,OAAO0B,EAAU,GAAD,OAAID,EAAJ,gBAAezB,IAG1B,SAASiC,EAAajC,GAC3B,OAAO0B,EAAU,GAAD,OAAID,EAAJ,sBAAqBzB,ICLxB,SAASkC,IACtB,IAAMC,EAAWC,cAEbpC,EAAgBR,YAAYS,GAC1BoC,EAAc,uCAAG,WAAOC,GAAP,eAAAX,EAAA,6DACrBQ,EAASnB,GAAW,IACpBmB,EAASnE,GAAgB,IAFJ,SAIFsE,EAAKtC,GAAOuC,MAAK,SAACtD,GAEnC,OADAkD,EAASnB,GAAW,IACb/B,KANY,YAIf8C,EAJe,QASZS,SAAS,WAAiBlD,IAATyC,EATL,uBAUnBI,EAASd,GAAS,IAVC,0BAcrBc,EAASpC,EAASgC,IAdG,2CAAH,sDAgBpB,OACE,sBAAKrC,UAAWC,IAAO8C,OAAvB,UACE,sBAAM/C,UAAWC,IAAOmC,KAAxB,uBACA,cAACpB,EAAD,CAAYE,KAAK,OAAOD,YAAa,kBAAM0B,EAAeL,MAC1D,cAACtB,EAAD,CACEE,KAAK,eACLD,YAAa,kBAAM0B,EAAeJ,SCnCnC,IAAMS,EAAmB,mBAEnBC,EAAiB,SAAC3C,GAAD,MAAqB,CACjD9B,KAAMwE,EACNvE,QAAS6B,IAGE4C,EAAoB,SAACvE,GAAD,OAC/BA,EAAMwE,oB,iBCDO,SAASC,IACtB,IAAMX,EAAWC,cAEXW,EAAe,uCAAG,WAAOC,GAAP,eAAArB,EAAA,sDAClB3B,EAAgB,GADE,KAEdgD,EAFc,OAGf,SAHe,OAOf,SAPe,6BAIlBhD,EACE,oFALgB,mCAQlBA,EACE,oFATgB,mCAYlBmC,EAASQ,GAAe,IAZN,2BAgBtBR,EAASnE,GAAgB,IACzBmE,EAASpC,EAASC,IAjBI,4CAAH,sDAoBrB,OACE,sBAAKN,UAAWC,IAAOsD,QAAvB,UACE,sBAAMvD,UAAWC,IAAOmC,KAAxB,kBACA,cAACpB,EAAD,CAAYE,KAAK,OAAOD,YAAa,kBAAMoC,EAAgB,WAC3D,cAACrC,EAAD,CAAYE,KAAK,OAAOD,YAAa,kBAAMoC,EAAgB,WAC3D,cAACrC,EAAD,CAAYE,KAAK,SAASD,YAAa,kBAAMoC,EAAgB,gB,6BCzBpD,SAASG,KACtB,IAAMf,EAAWC,cADmB,EAEFe,mBAChC/C,MAAMC,KAAK,CAAE+C,OAAQ,KAAM,iBAAM,OAAKC,KAAK,KAHT,mBAE7BC,EAF6B,KAElBC,EAFkB,KAM9BC,EAAuBhE,YAAYoD,GAsBzC,OACE,mCACGY,GACC,iCACE,uBACEC,SAzBW,SAACC,GACpB,IAAMzE,EAAQyE,EAAEC,OAAO1E,MACvB2E,QAAQC,IAAI5E,GACE,OAAVA,GACFsE,EAAatE,IAsBPf,KAAK,OACLwB,UAAWC,IAAOmE,WAClB7E,MAAOqE,EACPS,QAAQ,mBACRC,MAAM,+DAER,uBACE9F,KAAK,SACLwB,UAAWC,IAAOsE,SAClBnD,QA3BO,WAEQ,KAArBwC,EAAUF,QACThD,MAAMC,KAAKiD,GAAWY,MAAK,SAACR,GAAD,MAAqB,MAANA,IAAc,KAAKjF,KAAKiF,QAEnEvB,EAASpC,EAASuD,IAClBnB,EAASQ,GAAe,KAG1BR,EAASnE,GAAgB,KAmBjBiB,MAAM,Y,uBCjDH,SAASkF,KACtB,OACE,sBAAKzE,UAAWC,KAAOyE,UAAvB,UACE,oBAAI1E,UAAWC,KAAO0E,UAAtB,2BACA,sBAAK3E,UAAWC,KAAO2E,aAAvB,UACE,cAACpC,EAAD,IACA,cAACY,EAAD,OAEF,cAAC,GAAD,O,uBCTS,SAASyB,KACtB,IAAMtD,EAAUzB,YAAY0B,GAE5B,OACE,mCACGD,GACC,qBAAKvB,UAAWC,KAAO6E,QAAvB,SACE,sBAAK9E,UAAWC,KAAO8E,cAAvB,UACE,mBAAG/E,UAAWC,KAAO+E,gBAArB,sDAGA,qBACEhF,UAAWC,KAAOgF,IAClBC,IAAI,8FACJC,IAAI,oB,uBCbH,SAASC,KACtB,IAAM3C,EAAWC,cACXd,EAAQ9B,YAAY+B,GAEpBwD,EAAaC,uBAAY,WAC7B7C,EAASd,GAAS,MACjB,CAACc,IAEJ,OACE,mCACGb,GACC,sBAAK5B,UAAWC,KAAO6E,QAAvB,UACE,qBAAK9E,UAAWC,KAAO8E,cAAvB,SACE,oBAAG/E,UAAWC,KAAOsF,cAArB,UACE,qBACEJ,IAAI,aACJD,IAAI,oEACJlF,UAAWC,KAAOgF,MAJtB,sDASF,qBAAKjF,UAAWC,KAAOuF,WAAYpE,QAASiE,EAA5C,sB,wBCrBK,SAASI,KACtB,OACE,uBAAMzF,UAAWC,KAAOyF,KAAxB,UACE,cAACjB,GAAD,IACA,cAAChE,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OCFSkF,OARf,WACE,OACE,mCACE,cAACF,GAAD,O,SCHAG,GACJ,oFCKF,IAAMC,GAAcC,aAAgB,CAClCtF,aDCK,WAA4D,IAAtCF,EAAqC,uDAA7BsF,GAASG,EAAoB,uCAChE,OAAQA,EAAOvH,MACb,KAAK4B,EACH,OAAO2F,EAAOtH,QAChB,QACE,OAAO6B,ICLXmB,eCH4B,WAA0C,IAAzCF,EAAwC,wDAAvBwE,EAAuB,uCACrE,OAAQA,EAAOvH,MACb,KAAK6C,EACH,OAAO0E,EAAOtH,QAChB,QACE,OAAO8C,IDDXO,aEJK,WAA0D,IAApCF,EAAmC,wDAApBmE,EAAoB,uCAC9D,OAAQA,EAAOvH,MACb,KAAKkD,EACH,OAAOqE,EAAOtH,QAChB,QACE,OAAOmD,IFAXuB,mBGLK,WAAgE,IAApC7C,EAAmC,wDAApByF,EAAoB,uCACpE,OAAQA,EAAOvH,MACb,KAAKwE,EACH,OAAO+C,EAAOtH,QAChB,QACE,OAAO6B,IHCX1B,oBINK,WAAiE,IAApCL,EAAmC,wDAApBwH,EAAoB,uCACrE,OAAQA,EAAOvH,MACb,KAAKH,EACH,OAAO0H,EAAOtH,QAChB,QACE,OAAOF,MJIAyH,GAAQC,aAAYJ,IKFlBK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJa,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.8333c364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2i4Xm\",\"notiContainer\":\"styles_notiContainer__3AdfV\",\"errorDescript\":\"styles_errorDescript__1hyBO\",\"img\":\"styles_img__32_dz\",\"exitButton\":\"styles_exitButton__3DjYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2KJAs\",\"notiContainer\":\"styles_notiContainer__12Jzu\",\"loadingDescript\":\"styles_loadingDescript__3J-2R\",\"img\":\"styles_img__UamvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1MFgN\",\"menuTitle\":\"styles_menuTitle__3DxFR\",\"btnContainer\":\"styles_btnContainer__1CD0V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"algBtn\":\"styles_algBtn__3UuRn\",\"text\":\"styles_text__n1QQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modeBtn\":\"styles_modeBtn__FV45r\",\"text\":\"styles_text__1L0wS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"valueInput\":\"styles_valueInput__2IWbz\",\"okButton\":\"styles_okButton__1k9sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"styles_cell__QCPX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__29JtN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2p3kd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__AbnVM\"};","export const SET_RESET_PREV_NUM = \"SET_RESET_PREV_NUM\";\n\nexport const setResetPrevNum = (reset: boolean) => ({\n  type: SET_RESET_PREV_NUM,\n  payload: reset,\n});\n\nexport const selectResetPrevNum = (state: any): boolean =>\n  state.resetPrevNumReducer;\n","import { memo, useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectResetPrevNum } from \"../../../redux/ResetPrevNum/action\";\nimport styles from \"./styles.module.scss\";\n\nfunction isNumeric(number: string) {\n  return /\\d/.test(number);\n}\n\n// custom hook for previous and current value comparision\nfunction usePrevious(value: any, reset: boolean) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return reset ? undefined : ref.current;\n}\n\nfunction areEqual(prev: any, next: any) {\n  return prev.number === next.number && prev.style.color === next.style.color;\n}\n\ntype CellProps = {\n  number: string;\n  style: {\n    borderTop?: string;\n    borderLeft?: string;\n    color: string;\n  };\n};\n\nfunction Cell({ number, style }: CellProps) {\n  const reset = useSelector(selectResetPrevNum);\n  const prevNum = usePrevious(number, reset);\n\n  // This is because props are read-only\n  const newStyle = { ...style };\n\n  // highlight solution\n  if (prevNum !== undefined && prevNum !== number) {\n    newStyle.color = \"#f00\";\n  }\n\n  return (\n    <div className={styles.cell} style={newStyle}>\n      {isNumeric(number) ? number : \"\"}\n    </div>\n  );\n}\n\nexport default memo(Cell, areEqual);\n","export const SET_BOARD = \"SET_BOARD\";\n\nexport const setBoard = (board: string) => ({\n  type: SET_BOARD,\n  payload: board,\n});\n\nexport const selectBoard = (state: any): string => state.boardReducer;\n","import Cell from \"../Cell\";\nimport { useSelector } from \"react-redux\";\nimport { selectBoard } from \"../../../redux/Board/action\";\nimport styles from \"./styles.module.scss\";\n\nexport default function Board() {\n  const board = useSelector(selectBoard);\n\n  return (\n    <section className={styles.board}>\n      {Array.from(board).map((el, i) => {\n        const gridStyle: any = {\n          color: \"#000\",\n        };\n\n        if (i % 3 === 0 && i % 9 !== 0) {\n          gridStyle[\"borderLeft\"] = \"4px inset #000\";\n        }\n\n        if (i % 27 >= 0 && i % 27 < 9 && i > 8) {\n          gridStyle[\"borderTop\"] = \"4px inset #000\";\n        }\n\n        if (el === \".\") {\n          gridStyle.color = \"#f00\";\n        }\n\n        return <Cell key={i} number={el} style={gridStyle} />;\n      })}\n    </section>\n  );\n}\n","import { MouseEventHandler } from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface PlayButtonProps {\n  handleClick: MouseEventHandler;\n  name: string;\n}\n\nexport default function PlayButton({ handleClick, name }: PlayButtonProps) {\n  return (\n    <div className={styles.button} onClick={handleClick}>\n      {name}\n    </div>\n  );\n}\n","export const SET_LOADING = \"SET_LOADING\";\n\nexport const setLoading = (loading: boolean) => ({\n  type: SET_LOADING,\n  payload: loading,\n});\n\nexport const selectLoading = (state: any): boolean => state.loadingReducer;\n","export const SET_ERROR = \"SET_ERROR\";\n\nexport const setError = (error: boolean) => ({\n  type: SET_ERROR,\n  payload: error,\n});\n\nexport const selectError = (state: any): boolean => state.errorReducer;\n","const API = \"https://week11-ai.herokuapp.com\";\n\nasync function getResult(API: string) {\n  let response = await fetch(API);\n  let data = await response.text();\n\n  return data;\n}\n\nexport function getAC3(board: string) {\n  return getResult(`${API}/ac3/${board}`);\n}\n\nexport function getBackTrack(board: string) {\n  return getResult(`${API}/backtrack/${board}`);\n}\n","import styles from \"./styles.module.scss\";\nimport PlayButton from \"../PlayButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setBoard, selectBoard } from \"../../../redux/Board/action\";\nimport { setResetPrevNum } from \"../../../redux/ResetPrevNum/action\";\nimport { setLoading } from \"../../../redux/Loading/action\";\nimport { setError } from \"../../../redux/Error/action\";\nimport { getBackTrack, getAC3 } from \"../../../api/getResult\";\n\nexport default function AlgButton() {\n  const dispatch = useDispatch();\n\n  let board: string = useSelector(selectBoard); // board for alg click\n  const handleAlgClick = async (func: (board: string) => Promise<string>) => {\n    dispatch(setLoading(true));\n    dispatch(setResetPrevNum(false));\n\n    const data = await func(board).then((value) => {\n      dispatch(setLoading(false));\n      return value;\n    });\n\n    if (data.includes(\".\") || data === undefined) {\n      dispatch(setError(true));\n      return;\n    }\n\n    dispatch(setBoard(data));\n  };\n  return (\n    <div className={styles.algBtn}>\n      <span className={styles.text}>Algorithm</span>\n      <PlayButton name=\"AC-3\" handleClick={() => handleAlgClick(getAC3)} />\n      <PlayButton\n        name=\"Backtracking\"\n        handleClick={() => handleAlgClick(getBackTrack)}\n      />\n    </div>\n  );\n}\n","export const SET_CUSTOM_BOARD = \"SET_CUSTOM_BOARD\";\n\nexport const setCustomBoard = (board: boolean) => ({\n  type: SET_CUSTOM_BOARD,\n  payload: board,\n});\n\nexport const selectCustomBoard = (state: any): boolean =>\n  state.customBoardReducer;\n","import PlayButton from \"../PlayButton\";\nimport { useDispatch } from \"react-redux\";\nimport { setBoard } from \"../../../redux/Board/action\";\nimport { setCustomBoard } from \"../../../redux/CustomBoard/action\";\nimport { setResetPrevNum } from \"../../../redux/ResetPrevNum/action\";\nimport styles from \"./styles.module.scss\";\n\nexport default function ModeButton() {\n  const dispatch = useDispatch();\n\n  const handleModeClick = async (mode: string) => {\n    let board: string = \"\";\n    switch (mode) {\n      case \"easy\":\n        board =\n          \".2...194881.6.......4.276..17..9...33.........48.53.....61....2....74..6.5.9....7\";\n        break;\n      case \"hard\":\n        board =\n          \".9.............46.2.......5.7.8.4.1..3..2....5...6.8...1.73..2.9.8.5.......2.....\";\n        break;\n      default:\n        dispatch(setCustomBoard(true));\n        return;\n    }\n\n    dispatch(setResetPrevNum(true)); // set previous number to undefined for display\n    dispatch(setBoard(board));\n  };\n\n  return (\n    <div className={styles.modeBtn}>\n      <span className={styles.text}>Mode</span>\n      <PlayButton name=\"Easy\" handleClick={() => handleModeClick(\"easy\")} />\n      <PlayButton name=\"Hard\" handleClick={() => handleModeClick(\"hard\")} />\n      <PlayButton name=\"Custom\" handleClick={() => handleModeClick(\"custom\")} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setBoard } from \"../../../redux/Board/action\";\nimport { setResetPrevNum } from \"../../../redux/ResetPrevNum/action\";\nimport {\n  setCustomBoard,\n  selectCustomBoard,\n} from \"../../../redux/CustomBoard/action\";\nimport styles from \"./styles.module.scss\";\n\nexport default function CustomBoard() {\n  const dispatch = useDispatch();\n  const [initBoard, setInitBoard] = useState(\n    Array.from({ length: 81 }, () => \".\").join(\"\")\n  );\n\n  const customBoard: boolean = useSelector(selectCustomBoard);\n\n  const handleChange = (e: any) => {\n    const value = e.target.value;\n    console.log(value);\n    if (value !== null) {\n      setInitBoard(value);\n    }\n  };\n\n  const handleOk = () => {\n    if (\n      initBoard.length === 81 &&\n      !Array.from(initBoard).some((e: string) => e !== \".\" && !/\\d/.test(e))\n    ) {\n      dispatch(setBoard(initBoard));\n      dispatch(setCustomBoard(false));\n    }\n\n    dispatch(setResetPrevNum(true));\n  };\n\n  return (\n    <>\n      {customBoard && (\n        <form>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className={styles.valueInput}\n            value={initBoard}\n            pattern=\"[(\\.*\\d*)]{81}\"\n            title=\"Only accept dot as empty or number. Length must be 81 long\"\n          />\n          <input\n            type=\"submit\"\n            className={styles.okButton}\n            onClick={handleOk}\n            value=\"Ok\"\n          />\n        </form>\n      )}\n    </>\n  );\n}\n","import AlgButton from \"../AlgButton\";\nimport ModeButton from \"../ModeButton\";\nimport CustomInput from \"../CustomInput\";\nimport styles from \"./styles.module.scss\";\n\nexport default function Menu() {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.menuTitle}>Sudoku Solver</h1>\n      <div className={styles.btnContainer}>\n        <AlgButton />\n        <ModeButton />\n      </div>\n      <CustomInput />\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { selectLoading } from \"../../../redux/Loading/action\";\nimport styles from \"./styles.module.scss\";\n\nexport default function LoadingScreen() {\n  const loading = useSelector(selectLoading);\n\n  return (\n    <>\n      {loading && (\n        <div className={styles.overlay}>\n          <div className={styles.notiContainer}>\n            <p className={styles.loadingDescript}>\n              Waiting is one of the happiest things...\n            </p>\n            <img\n              className={styles.img}\n              src=\"https://media.discordapp.net/attachments/759048085858287652/899579895221461022/RunLaugh.gif\"\n              alt=\"pepe run\"\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setError, selectError } from \"../../../redux/Error/action\";\nimport styles from \"./styles.module.scss\";\n\nexport default function ErrorNoti() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleExit = useCallback(() => {\n    dispatch(setError(false));\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && (\n        <div className={styles.overlay}>\n          <div className={styles.notiContainer}>\n            <p className={styles.errorDescript}>\n              <img\n                alt=\"sleep pepe\"\n                src=\"https://cdn.discordapp.com/emojis/896721132584071208.png?size=240\"\n                className={styles.img}\n              />\n              This board cannot be solved by this algorithm!\n            </p>\n          </div>\n          <div className={styles.exitButton} onClick={handleExit}>\n            Ok!\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import Board from \"../shards/Board\";\nimport Menu from \"../shards/Menu\";\nimport Loading from \"../shards/Loading\";\nimport Error from \"../shards/Error\";\nimport styles from \"./styles.module.scss\";\n\nexport default function HomePage() {\n  return (\n    <main className={styles.main}>\n      <Menu />\n      <Board />\n      <Error />\n      <Loading />\n    </main>\n  );\n}\n","import HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return (\n    <>\n      <HomePage />\n    </>\n  );\n}\n\nexport default App;\n","import { SET_BOARD } from \"./action\";\n\nconst initial =\n  \".................................................................................\";\n\ntype ActionType = {\n  type: string;\n  payload: string;\n};\n\nexport function boardReducer(board = initial, action: ActionType) {\n  switch (action.type) {\n    case SET_BOARD:\n      return action.payload;\n    default:\n      return board;\n  }\n}\n","import { combineReducers, createStore } from \"redux\";\n\nimport { boardReducer } from \"./Board/reducer\";\nimport { loadingReducer } from \"./Loading/reducer\";\nimport { errorReducer } from \"./Error/reducer\";\nimport { resetPrevNumReducer } from \"./ResetPrevNum/reducer\";\nimport { customBoardReducer } from \"./CustomBoard/reducer\";\n\nconst rootReducer = combineReducers({\n  boardReducer,\n  loadingReducer,\n  errorReducer,\n  customBoardReducer,\n  resetPrevNumReducer,\n});\n\nexport const store = createStore(rootReducer);\n","import { SET_LOADING } from \"./action\";\n\ntype ActionType = {\n  type: string;\n  payload: boolean;\n};\n\nexport const loadingReducer = (loading = false, action: ActionType) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.payload;\n    default:\n      return loading;\n  }\n};\n","import { SET_ERROR } from \"./action\";\n\ntype ActionType = {\n  type: string;\n  payload: boolean;\n};\n\nexport function errorReducer(error = false, action: ActionType) {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    default:\n      return error;\n  }\n}\n","import { SET_CUSTOM_BOARD } from \"./action\";\n\ntype ActionType = {\n  type: string;\n  payload: boolean;\n};\n\nexport function customBoardReducer(board = false, action: ActionType) {\n  switch (action.type) {\n    case SET_CUSTOM_BOARD:\n      return action.payload;\n    default:\n      return board;\n  }\n}\n","import { SET_RESET_PREV_NUM } from \"./action\";\n\ntype ActionType = {\n  type: string;\n  payload: boolean;\n};\n\nexport function resetPrevNumReducer(reset = false, action: ActionType) {\n  switch (action.type) {\n    case SET_RESET_PREV_NUM:\n      return action.payload;\n    default:\n      return reset;\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./reset.css\";\nimport \"./global.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}